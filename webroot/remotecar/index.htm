<!DOCTYPE html>
<html lang="sv">
    <head>
        <title>Remotecar</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <style>
            html, body{ font-family: sans-serif; }
            header {
                font-size: 20pt; color: white; background-color: #444a33;
                width: 402px; text-align: center;
            }
            header > input { font-size: 16pt; float: left; }
            #car { transform-box: fill-box; transform-origin: center;}
            /* steering buttons */
            button { 
                font-size:100pt; background-color:Transparent; outline:none;
                border: none; opacity:0.2; position:absolute;
            }
            button:hover { opacity: 0.8; }
            #leftBtn { top: 250px; left:0; }
            #rightBtn { top: 250px; left:280px;}
            #upBtn { top: 10px; left:170px; }
            #downBtn {top: 510px; left:170px; }
            
            /* websocket button */
            #serverBtn {background-color: red; border:1px solid gray; }
            #serverBtn.connected { background-color: green; }
        </style>
    </head>
    <body>
        <header>
            <input id="serverBtn" type="button" title="Kontakt med Webserver" value="&#x1f5a7;"/>
            Fj채rrstyr fordon
        </header>
        <svg width="400" height="600" style="border:1px solid black;">
            <text id="svgText" x="5" y="15">speed:0%, dir:0deg</text>
            <g id="car" style="transform: translate(50px, 120px) rotate(0deg)">
                <!--d채ck-->
                <rect x="0" y="30" width="20" height="70" rx="5" fill="black"/>
                <rect x="280" y="30" width="20" height="70" rx="5" fill="black"/>
                <rect x="0" y="280" width="20" height="70" rx="5" fill="black"/>
                <rect x="280" y="280" width="20" height="70" rx="5" fill="black"/>
                <!--kaross-->
                <rect x="20" y="0" width="260" height="370" rx="20" fill="green"/>
                <!--tak-->
                <rect x="21" y="110" width="258" height="150" rx="20" style="fill:green; stroke:black"/>
                <!--str책lkastare-->
                <ellipse cx="60" cy="10" rx="20" ry="3" style="fill:yellow; stroke:gray;"/>
                <ellipse cx="240" cy="10" rx="20" ry="3" style="fill:yellow; stroke:gray;"/>
                <!--grill-->
                <rect x="100" y="3" height="10" width="100" rx="5" style="fill:#333; stroke:#AAA;"/>
            </g>
            <line id="vectorTurn" x1="200" y1="300" x2="200" y2="300" style="stroke:blue;stroke-width:20;stroke-linecap:round;"/>
            <line id="vectorSpeed" x1="200" y1="300" x2="200" y2="300" style="stroke:red;stroke-width:20;stroke-linecap:round;"/>
        </svg>
        
        <button id="upBtn">&uarr;</button>
        <button id="downBtn">&darr;</button>
        <button id="leftBtn">&larr;</button>
        <button id="rightBtn">&rarr;</button>
        
        <script type="module">
            import {user} from '../modules/user.mjs';
            import {Messenger} from '../modules/messenger.mjs';
            import {WS} from '../modules/ws.mjs';
            import {car} from './displayer.mjs';
            import {Btn, KeyCode} from './button.mjs';

            // skapa en messager
            var infoLabel = new Messenger();

            // s채tta upp websocket connection
            let tmrSp, tmrDir;
            var ws = new WS((key, vlu) => {
                if (key === 'speed')
                    car.setSpeed(vlu);
                else if (key === 'dir')
                    car.setDir(vlu);
            }, infoLabel, user);

            ws.sendSpeed = ()=>{
                clearTimeout(tmrSp);
                tmrSp = setTimeout(()=>{
                    ws.send(JSON.stringify({speed: car.speed}));
                }, 20);
            }
            ws.sendDir = ()=>{
                clearTimeout(tmrDir);
                tmrDir = setTimeout(()=>{
                    ws.send(JSON.stringify({dir: car.dir}));
                }, 20);
            }

            // websocket server connection
            let serverBtn = document.querySelector("#serverBtn");
            serverBtn.addEventListener('click', e=>ws.connect());
            ws.onConnected = (e)=>{
                serverBtn.className = "connected";
                serverBtn.disabled = true;
            }
            ws.onDisconnected = (e)=>{
                serverBtn.className = '';
                serverBtn.disabled = false;
            }
            if (!ws.connect())
                infoLabel.show("Kunde inte ansluta till websocket server")

            // create steering buttons
            let upBtn = new Btn("#upBtn", ()=>{car.forward();ws.sendSpeed()}, null, KeyCode.Up),
                downBtn = new Btn("#downBtn", ()=>{car.reverse();ws.sendSpeed()}, null, KeyCode.Down),
                leftBtn =  new Btn("#leftBtn", ()=>{car.left();ws.sendDir()}, null, KeyCode.Left),
                rightBtn =  new Btn("#rightBtn", ()=>{car.right();ws.sendDir()}, null, KeyCode.Right);
        </script>
    </body>
</html>
